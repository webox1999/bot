from aiogram import types, F
from Clients_bot.handlers.start import router
from Clients_bot.handlers.keyboards import kupon_kb
from Clients_bot.utils.messaging import load_codes, save_codes, delete_code_from_profile
from datetime import datetime, timedelta
from Clients_bot.utils.storage import user_phone_numbers
from aiogram.filters import Command
import asyncio


#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –±–æ–Ω—É—Å–æ–≤
@router.message(F.text == "‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –±–æ–Ω—É—Å—ã")
async def show_bonus_info(message: types.Message):
    text = (
        "üöó <b>–ó–∞ –†—É–ª–µ–º –ë–æ—Ç ‚Äì –≤–∞—à –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–µ–π!</b> üîß\n\n"
        "ü§ñ <b>–ß—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç?</b>\n\n"
        "üìå <b>–ì–∞—Ä–∞–∂</b> ‚Äì –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏, –∏ –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–±–µ—Ä–µ—Ç –∑–∞–ø—á–∞—Å—Ç–∏ –¥–ª—è –¢–û "
        "–∏ —É—Å–∫–æ—Ä–∏—Ç –ø–æ–∏—Å–∫ –Ω—É–∂–Ω—ã—Ö –¥–µ—Ç–∞–ª–µ–π! üèéÔ∏è\n"
        "üìå <b>–ó–∞–∫–∞–∑—ã</b> ‚Äì —Å–ª–µ–¥–∏—Ç–µ –∑–∞ —Å—Ç–∞—Ç—É—Å–∞–º–∏ –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫. üì¶\n"
        "üìå <b>–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π</b> ‚Äì –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ —Å–≤–æ–∏ —Ä–∞—Å—Ö–æ–¥—ã, –±–æ–Ω—É—Å–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∫–∏–¥–∫–∏. üí≥\n"
        "üìå <b>–ü–æ–¥–æ–±—Ä–∞—Ç—å –∑–∞–ø—á–∞—Å—Ç—å</b> ‚Äì –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, —á—Ç–æ–±—ã —É—Ç–æ—á–Ω–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ, —Ü–µ–Ω—É –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏ –¥–µ—Ç–∞–ª–∏. üöÄ\n"
        "üìå <b>–ü–æ–∏—Å–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π –¥–ª—è –¢–û</b> ‚Äì –±–æ—Ç –ø–æ–¥–±–µ—Ä–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è "
        "–Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–∞—à–µ–≥–æ <b>–ì–∞—Ä–∞–∂–∞</b>. üõ†Ô∏è\n"
        "üìå <b>–ú–æ–∏ –∑–∞–ø—Ä–æ—Å—ã</b> ‚Äì —Ö—Ä–∞–Ω–∏—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –≤—Å–µ—Ö –≤–∞—à–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π –∏ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –ø–æ–¥–±–æ—Ä–∫–∞–º–∏. üì®\n"
        "üìå <b>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</b> ‚Äì –±–æ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –æ–ø–æ–≤–µ—Å—Ç–∏—Ç –≤–∞—Å –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞: "
        "–æ—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–æ –≤—ã–¥–∞—á–∏. üîî\n"
        "üìå <b>–°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ</b> ‚Äì –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é, "
        "–Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –ø—Ä—è–º–æ —á–µ—Ä–µ–∑ –±–æ—Ç–∞! ‚ùó\n\n"
        "‚ú® <b>–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞?</b> ‚ú®\n\n"
        "üí∞ <b>–ö–æ–ø–∏—Ç–µ –±–æ–Ω—É—Å—ã –ø—Ä–∏ –∫–∞–∂–¥–æ–π –ø–æ–∫—É–ø–∫–µ —Å–≤—ã—à–µ 1000‚ÇΩ!</b>\n"
        "üéÅ <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–Ω—É—Å—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ.</b>\n\n"
        "üîπ –ë–æ–Ω—É—Å—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è <b>–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</b>.\n"
        "üîπ –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–∫—É–ø–∫—É –º–æ–∂–Ω–æ, –µ—Å–ª–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–æ <b>200 –±–æ–Ω—É—Å–æ–≤ –∏ –±–æ–ª–µ–µ</b>.\n"
        "üîπ <b>1 –±–æ–Ω—É—Å = 1 —Ä—É–±–ª—å —Å–∫–∏–¥–∫–∏.</b>\n\n"
        "üõí <b>–ü–æ–∫—É–ø–∞–π—Ç–µ, –Ω–∞–∫–∞–ø–ª–∏–≤–∞–π—Ç–µ –∏ —ç–∫–æ–Ω–æ–º—å—Ç–µ –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏!</b> üöÄ"
    )
    await message.answer(text, parse_mode="HTML")


@router.message(F.text == "üéü –ö—É–ø–æ–Ω—ã")
async def show_coupon(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', reply_markup=kupon_kb)







async def update_code_status(data_code):
    """ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å—ã –∫–æ–¥–æ–≤ –≤ JSON """
    print(f'–§—É–Ω—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è: {data_code}')
    now = datetime.now()
    updated = False

    for request in data_code:
        client_id = request.get("client_id")  # –ò—Å–ø–æ–ª—å–∑—É–µ–º get(), —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫
        code = request.get("sale_code")
        print(f'–í—ã–≤–æ–¥–∏–º —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ : {client_id} , {code}')
        if not client_id or not code:
            continue  # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ—Ç –∫–æ–¥

        status = request.get("status")

        if status == "active":
            code_date = datetime.strptime(request["date"], "%Y-%m-%d %H:%M:%S")
            validity_days = int(request.get("validity", 0))  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ
            expiry_date = code_date + timedelta(days=validity_days)

            if now > expiry_date:
                request["status"] = "expired"
                await delete_code_from_profile(client_id, code)  # –£–¥–∞–ª—è–µ–º –∫—É–ø–æ–Ω —É –∫–ª–∏–µ–Ω—Ç–∞
                print(f'–ö—É–ø–æ–Ω {code} —É–¥–∞–ª–µ–Ω –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è {client_id}')
                updated = True  # –§–∏–∫—Å–∏—Ä—É–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å



    if updated:
        save_codes(data_code)


async def get_codes(search_value, status, search_by="phone_number"):
    """ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–¥–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ client_id –∏ —Å—Ç–∞—Ç—É—Å—É """
    data_code = load_codes()
    await update_code_status(data_code)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∫–æ–¥—ã

    # –§–∏–ª—å—Ç—Ä—É–µ–º –∫–æ–¥—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ø–æ–∏—Å–∫–∞
    filtered_codes = [req for req in data_code if req.get(search_by) == search_value and req["status"] in status]

    return filtered_codes

async def auto_check_codes():
    while True:
        data_code = load_codes()
        await update_code_status(data_code)
        print('–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É–ø–æ–Ω–æ–≤ –∑–∞–ø—É—â–µ–Ω–æ...')
        await asyncio.sleep(30)


@router.message(F.text == "‚úÖ –î–µ–π—Å—Ç–≤—É—é—â–∏–µ")
async def show_active_codes(message: types.Message):
    """ –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–¥–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è """
    phone_number = user_phone_numbers.get(message.from_user.id)  # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    active_codes = await get_codes(phone_number, status=["active"])

    if not active_codes:
        return await message.answer("‚úÖ –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É–ø–æ–Ω–æ–≤.")

    text = "üéü **–í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫—É–ø–æ–Ω—ã:**\n\n"
    for code in active_codes:
        text += (
            f"üîπ –ö–æ–¥: `{code['sale_code']}`\n"
            f"üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {code['date']}\n"
            f"üí∞ –°–∫–∏–¥–∫–∞: {code['percent']}%\n"
            f"üìÜ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {datetime.strptime(code['date'], '%Y-%m-%d %H:%M:%S') + timedelta(days=int(code['validity']))}\n"
            f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n"
        )

    await message.answer(text)


@router.message(F.text == "üóÑ –ê—Ä—Ö–∏–≤ –∫—É–ø–æ–Ω–æ–≤")
async def show_archive_codes(message: types.Message):
    """ –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∫—É–ø–æ–Ω–æ–≤ """
    phone_number = user_phone_numbers.get(message.from_user.id)  # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    archive_codes = await get_codes(phone_number, status=["used", "expired"])

    if not archive_codes:
        return await message.answer("üóÑ –£ –≤–∞—Å –Ω–µ—Ç –∞—Ä—Ö–∏–≤–Ω—ã—Ö –∫—É–ø–æ–Ω–æ–≤.")

    text = "üìÅ **–ê—Ä—Ö–∏–≤ –∫—É–ø–æ–Ω–æ–≤:**\n\n"
    for code in archive_codes:
        used_date = "–ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è" if code["used_date"] == None else code["used_date"]
        status_text = "üü† **–ü—Ä–æ—Å—Ä–æ—á–µ–Ω**" if code["status"] == "expired" else "‚úÖ **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω**"
        text += (
            f"üîπ –ö–æ–¥: `{code['sale_code']}`\n"
            f"üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {code['date']}\n"
            f"üìÖ –î–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: {used_date}\n"
            f"üí∞ –°–∫–∏–¥–∫–∞: {code['percent']}%\n"
            f"üìÜ –î–µ–π—Å—Ç–≤–æ–≤–∞–ª –¥–æ: {datetime.strptime(code['date'], '%Y-%m-%d %H:%M:%S') + timedelta(days=int(code['validity']))}\n"
            f"üìå –°—Ç–∞—Ç—É—Å: {status_text}\n"
            f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n"
        )

    await message.answer(text)

